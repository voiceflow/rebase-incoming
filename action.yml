name: Auto-Rebase Incoming Pull Requests
description: Keep pull request to this branch rebased to the latest commit
branding:
  icon: git-pull-request
  color: yellow

inputs:
  token:
    required: true
    description: Github Token used to make API request to fetch pull requests from the current owner/repo.
    default: ${{ github.token }}
  comment-on-failure:
    required: false
    description: Whether to post a comment in each pull request if it fails to rebase automatically
    default: 'true'
  label-on-failure:
    required: false
    description: Whether to add a label in each pull request if it fails to rebase automatically. This label blocks further failure comments from being posted
    default: 'true'
  skip-drafts:
    required: false
    description: Whether to skip draft pull requests
    default: 'true'
  check-bors-is-running:
    required: false
    description: Whether to skip pull requests if bors is running
    default: 'true'

runs:
  using: composite
  steps:
    - name: Checkout the latest code
      uses: actions/checkout@v2
      with:
        token: ${{ inputs.token }}
        fetch-depth: 0 # otherwise, you will fail to push refs to dest repo

    - name: Get all pull requests
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        SKIP_DRAFTS: ${{ inputs.skip-drafts }}
      run: |
        BASE_BRANCH="${GITHUB_REF#refs/heads/}"
        echo 'PRS_TO_REBASE='$(gh pr list --state open --json=baseRefName --json=number --json=isDraft --jq "map(select(.baseRefName == \"$BASE_BRANCH\")) | map(.number)[]") >> $GITHUB_ENV

    - name: Automatic Rebase
      uses: voiceflow/rebase-many@latest
      env:
        GITHUB_TOKEN: ${{ inputs.token }}
        PR_NUMBERS: ${{ env.PRS_TO_REBASE }}
        COMMENT_ON_FAILURE: ${{ inputs.comment-on-failure }}
        LABEL_ON_FAILURE: ${{ inputs.label-on-failure }}
        CHECK_DRAFT: ${{ inputs.skip-drafts }}
        CHECK_BORS: ${{ inputs.check-bors-is-running }}
